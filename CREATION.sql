CREATE TABLE SAS_article (
    COD_MRQ VARCHAR(50 CHAR),
    LIB_MRQ VARCHAR(100 CHAR),
    COD_ART VARCHAR(50 CHAR),
    LIB_PRD VARCHAR(255 CHAR),
    LIB_COL VARCHAR(50 CHAR),
    LIB_TAI VARCHAR(50 CHAR),
    FAM VARCHAR(100 CHAR),
    SS_FAM VARCHAR(100 CHAR),
    PRX_VEN VARCHAR(50 CHAR),
    LIB_GEN VARCHAR(50 CHAR),
    CIB_TRN_AGE VARCHAR(50 CHAR),
    COD_CAT VARCHAR(50 CHAR),
    LIB_CAT VARCHAR(100 CHAR)
);

CREATE TABLE DWH_article (
    COD_MRQ VARCHAR(50 CHAR),
    LIB_MRQ VARCHAR(100 CHAR),
    COD_ART VARCHAR(50 CHAR),
    LIB_PRD VARCHAR(255 CHAR),
    LIB_COL VARCHAR(50 CHAR),
    LIB_TAI VARCHAR(50 CHAR),
    FAM VARCHAR(100 CHAR),
    SS_FAM VARCHAR(100 CHAR),
    PRX_VEN NUMBER(10, 2),
    LIB_GEN VARCHAR(50 CHAR),
    CIB_TRN_AGE VARCHAR(50 CHAR),
    COD_CAT VARCHAR(50 CHAR),
    LIB_CAT VARCHAR(100 CHAR)
);

-- DROP TABLE SAS_ticket;
CREATE TABLE SAS_ticket (
    COD_ENS VARCHAR(50 CHAR),
    LIB_ENS VARCHAR(255 CHAR),
    LIB_MAG VARCHAR(255 CHAR),
    COD_ART VARCHAR(50 CHAR),
    DAT_HEU_TIC VARCHAR(50 CHAR),
    NUM_TIC VARCHAR(50 CHAR),
    NUM_TIC_LIG VARCHAR(50 CHAR),
    COD_CAI VARCHAR(50 CHAR),
    COD_VEN VARCHAR(50 CHAR),
    QTE VARCHAR(50 CHAR),
    MNT_BRU VARCHAR(50 CHAR),
    MNT_TTC VARCHAR(50 CHAR),
    COD_DEV VARCHAR(10 CHAR),
    TX_TVA VARCHAR(50 CHAR),
    REM_LIN VARCHAR(50 CHAR),
    REM_TIC VARCHAR(50 CHAR),
    TX_DEV VARCHAR(50 CHAR),
    COD_PAY VARCHAR(10 CHAR),
    LIB_PAY VARCHAR(255 CHAR),
    ADR1 VARCHAR(255 CHAR),
    ADR2 VARCHAR(255 CHAR),
    ADR3 VARCHAR(255 CHAR),
    VIL_MAG VARCHAR(255 CHAR),
    COD_POS VARCHAR(10 CHAR),
    DEP_MAG VARCHAR(50 CHAR),
    REG_MAG VARCHAR(255 CHAR),
    TEL VARCHAR(50 CHAR),
    EMAIL VARCHAR(255 CHAR),
    LNG VARCHAR(50 CHAR),
    LAT VARCHAR(50 CHAR),
    DAT_OUV VARCHAR(50 CHAR),
    DAT_FRM VARCHAR(50 CHAR),
    SCHEDULE VARCHAR(250 CHAR)
);

CREATE TABLE DWH_ticket (
    COD_ENS VARCHAR(50 CHAR),
    LIB_ENS VARCHAR(255 CHAR),
    LIB_MAG VARCHAR(255 CHAR),
    COD_ART VARCHAR(50 CHAR),
    DAT_HEU_TIC TIMESTAMP,
    NUM_TIC VARCHAR(50 CHAR),
    NUM_TIC_LIG INT,
    COD_CAI INT,
    COD_VEN VARCHAR(50 CHAR),
    QTE INT,
    MNT_BRU NUMBER(10, 5),
    MNT_TTC NUMBER(10, 5),
    COD_DEV VARCHAR(10 CHAR),
    TX_TVA NUMBER(5, 2),
    REM_LIN NUMBER(10, 5),
    REM_TIC NUMBER(10, 5),
    TX_DEV NUMBER(10, 5),
    COD_PAY VARCHAR(10 CHAR),
    LIB_PAY VARCHAR(255 CHAR),
    ADR1 VARCHAR(255 CHAR),
    ADR2 VARCHAR(255 CHAR),
    ADR3 VARCHAR(255 CHAR),
    VIL_MAG VARCHAR(255 CHAR),
    COD_POS VARCHAR(10 CHAR),
    DEP_MAG VARCHAR(50 CHAR),
    REG_MAG VARCHAR(255 CHAR),
    TEL VARCHAR(50 CHAR),
    EMAIL VARCHAR(255 CHAR),
    LNG NUMBER(10, 7),
    LAT NUMBER(10, 7),
    DAT_OUV DATE,
    DAT_FRM DATE,
    SCHEDULE CLOB
);

CREATE TABLE Magasin (
    COD_MAG VARCHAR2(50 CHAR) PRIMARY KEY,  -- Identifiant unique du magasin
    LIB_MAG VARCHAR2(255 CHAR),             -- Nom du magasin
    COD_ENS VARCHAR2(50 CHAR),              -- Code de l'enseigne
    LIB_ENS VARCHAR2(255 CHAR),             -- Nom de l'enseigne
    TEL VARCHAR2(50 CHAR),                  -- Numéro de téléphone
    EMAIL VARCHAR2(255 CHAR),               -- Adresse email
    DAT_OUV DATE,                           -- Date d'ouverture
    DAT_FRM DATE,                           -- Date de formation
    SCHEDULE CLOB,                          -- Horaires d'ouverture (texte long)
    COD_LOC NUMBER,                         -- Clé étrangère vers la table Localisation
    CONSTRAINT fk_magasin_localisation FOREIGN KEY (COD_LOC) REFERENCES Localisation(COD_LOC)
);

CREATE TABLE SAS_Magasin (
    COD_MAG VARCHAR2(50 CHAR) ,  -- Identifiant unique du magasin
    LIB_MAG VARCHAR2(255 CHAR),             -- Nom du magasin
    COD_ENS VARCHAR2(50 CHAR),              -- Code de l'enseigne
    LIB_ENS VARCHAR2(255 CHAR),             -- Nom de l'enseigne
    TEL VARCHAR2(50 CHAR),                  -- Numéro de téléphone
    EMAIL VARCHAR2(255 CHAR),               -- Adresse email
    DAT_OUV  VARCHAR2(255 CHAR),                           -- Date d'ouverture
    DAT_FRM  VARCHAR2(255 CHAR),                           -- Date de fermeture
    SCHEDULE  VARCHAR2(255 CHAR),                          -- Horaires d'ouverture (texte long)
    COD_LOC  VARCHAR2(255 CHAR)                        -- Clé étrangère vers la table Localisation
    );

CREATE TABLE Localisation (
    COD_LOC NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  -- Clé primaire auto-incrémentée
    ADR1 VARCHAR2(255 CHAR),                                       -- Adresse ligne 1
    ADR2 VARCHAR2(255 CHAR),                                      -- Adresse ligne 2
    ADR3 VARCHAR2(255 CHAR),                                      -- Adresse ligne 3
    VIL_MAG VARCHAR2(255 CHAR),                                   -- Ville
    COD_POS VARCHAR2(10 CHAR),                                    -- Code postal
    DEP_MAG VARCHAR2(50 CHAR),                                    -- Département
    REG_MAG VARCHAR2(255 CHAR),                                   -- Région
    LNG NUMBER(10, 7),                                            -- Longitude
    LAT NUMBER(10, 7)                                             -- Latitude
);

CREATE TABLE SAS_Localisation (
    COD_LOC NUMBER GENERATED BY DEFAULT AS IDENTITY,  -- Clé primaire auto-incrémentée
    ADR1 VARCHAR2(255 CHAR),                                       -- Adresse ligne 1
    ADR2 VARCHAR2(255 CHAR),                                      -- Adresse ligne 2
    ADR3 VARCHAR2(255 CHAR),                                      -- Adresse ligne 3
    VIL_MAG VARCHAR2(255 CHAR),                                   -- Ville
    COD_POS VARCHAR2(10 CHAR),                                    -- Code postal
    DEP_MAG VARCHAR2(50 CHAR),                                    -- Département
    REG_MAG VARCHAR2(255 CHAR),                                   -- Région
    LNG VARCHAR2(50 CHAR),                                            -- Longitude
    LAT VARCHAR2(50 CHAR)                                             -- Latitude
);

CREATE TABLE SAS_PAYS (
    ID_PAYS NUMBER GENERATED BY DEFAULT AS IDENTITY,  -- Clé primaire auto-incrémentée
    COD_PAY VARCHAR2(50 CHAR) ,  -- Identifiant unique de la catégorie
    LIB_PAY VARCHAR2(100 CHAR)             -- Libellé de la catégorie
);

CREATE TABLE SAS_REGION (
    ID_REG NUMBER GENERATED BY DEFAULT AS IDENTITY,  -- Clé primaire auto-incrémentée
    REG_MAG VARCHAR2(100 CHAR)             -- Libellé de la catégorie
);

CREATE TABLE SAS_DEP (
    ID_DEP NUMBER GENERATED BY DEFAULT AS IDENTITY,  -- Clé primaire auto-incrémentée
    DEP_MAG VARCHAR2(100 CHAR)             -- Libellé de la catégorie
);

CREATE TABLE SAS_VILLE (
    ID_VILLE NUMBER GENERATED BY DEFAULT AS IDENTITY,  -- Clé primaire auto-incrémentée
    VILLE VARCHAR2(100 CHAR),             -- Libellé de la catégorie
    COD_POS VARCHAR2(100 CHAR),
    ADR1 VARCHAR2(100 CHAR),
    ADR2 VARCHAR2(100 CHAR),
    ADR3 VARCHAR2(100 CHAR),
    LAT VARCHAR2(100 CHAR),
    LONG VARCHAR2(100 CHAR),
);